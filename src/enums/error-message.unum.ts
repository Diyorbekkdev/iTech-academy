import ErrorCode from '@/enums/error-code.enum';

const ErrorMessage: Record<ErrorCode, string> = {
  [ErrorCode.ServerError]: 'server_error',
  [ErrorCode.PermissionDenied]: 'permission_denied',
  [ErrorCode.TokenExpired]: 'token_expired',
  [ErrorCode.TokenNotExist]: 'token_not_exist',
  [ErrorCode.ValidationError]: 'validation_error',
  [ErrorCode.Unauthorized]: 'unauthorized',
  [ErrorCode.Forbidden]: 'forbidden',
  [ErrorCode.TooManyRequests]: 'too_many_requests',
  [ErrorCode.UserNotFound]: 'user_not_found',
  [ErrorCode.UserPhoneNumberAlreadyExist]: 'user_phone_number_already_exist',
  [ErrorCode.IncorrectPassword]: 'incorrect_password',
  [ErrorCode.BasicRoleCannotUpdated]: 'basic_role_cannot_updated',
  [ErrorCode.SMSNotSent]: 'sms_not_sent',
  [ErrorCode.UserBlockedForSMS]: 'user_blocked_for_sms',
  [ErrorCode.InvalidPhoneNumber]: 'invalid_phone_number',
  [ErrorCode.UserAlreadyExist]: 'user_already_exist',
  [ErrorCode.InvalidCode]: 'invalid_code',
  [ErrorCode.InvalidResetId]: 'invalid_reset_id',
  [ErrorCode.CategoryAlreadyExist]: 'category_already_exist',
  [ErrorCode.CategoryNotFound]: 'category_not_found',
  [ErrorCode.ProductAlreadyExist]: 'product_already_exist',
  [ErrorCode.ProductNotFound]: 'product_not_found',
  [ErrorCode.CartNotFound]: 'cart_not_found',
  [ErrorCode.CaptchaTokenNotExist]: 'captcha_token_not_exist',
  [ErrorCode.CaptchaVerificationFailed]: 'captcha_verification_failed',
  [ErrorCode.GalleryNotFound]: 'gallery_not_found',
  [ErrorCode.BannerNotFound]: 'banner_not_found',
  [ErrorCode.LeadNotFound]: 'lead_not_found',
  [ErrorCode.LeadNotDeleted]: 'lead_not_deleted',
  [ErrorCode.LeadAlreadyPhoned]: 'lead_already_phoned',
  [ErrorCode.PromoCodeAlreadyExist]: 'promo_code_already_exist',
  [ErrorCode.DiscountOutOfRangeZeroToHundred]: 'discount_out_of_range_zero_to_hundred',
  [ErrorCode.InvalidDate]: 'invalid_date',
  [ErrorCode.PromoCodeNotFound]: 'promo_code_not_found',
  [ErrorCode.InvalidCouponPercentageDiscount]: 'invalid_coupon_percentage_discount',
  [ErrorCode.ProductsMustBeEmpty]: 'products_must_be_empty',
  [ErrorCode.PromoCodeNotIncludedThisProduct]: 'promo_code_not_included_this_product',
  [ErrorCode.OrderNotFound]: 'order_not_found',
  [ErrorCode.CannotUpdateStatus]: 'cannot_update_status',
  [ErrorCode.OutOfUsageLimit]: 'out_of_usage_limit',
  [ErrorCode.AlreadyAddedToWishlist]: 'already_added_to_wishlist',
  [ErrorCode.AlreadyRemovedFromWishlist]: 'already_removed_to_wishlist',
};
// export const getErrorMessage = (code: string): string => {
//   const translationKey = ErrorMessage[code as ErrorCode] || 'unknown_error';
//   return i18n.t(`${translationKey}`);
// };
